[{"/Users/songjaehyeok/Desktop/github/React_Youtube/youtube/src/index.js":"1","/Users/songjaehyeok/Desktop/github/React_Youtube/youtube/src/app.jsx":"2","/Users/songjaehyeok/Desktop/github/React_Youtube/youtube/src/components/most_videos/most_video_list/most_video_list.jsx":"3","/Users/songjaehyeok/Desktop/github/React_Youtube/youtube/src/components/most_videos/most_video_item/most_video_item.jsx":"4","/Users/songjaehyeok/Desktop/github/React_Youtube/youtube/src/components/search_form/main_search/mainSearchForm.jsx":"5","/Users/songjaehyeok/Desktop/github/React_Youtube/youtube/src/components/search_form/sub_search/subSearchForm.jsx":"6","/Users/songjaehyeok/Desktop/github/React_Youtube/youtube/src/components/search_videos/search_video_list/search_video_list.jsx":"7","/Users/songjaehyeok/Desktop/github/React_Youtube/youtube/src/components/search_videos/search_video_item/search_video_item.jsx":"8","/Users/songjaehyeok/Desktop/github/React_Youtube/youtube/src/service/youtube.js":"9","/Users/songjaehyeok/Desktop/github/React_Youtube/youtube/src/components/play_video/play_video.jsx":"10"},{"size":318,"mtime":1612493773128,"results":"11","hashOfConfig":"12"},{"size":2510,"mtime":1612531397177,"results":"13","hashOfConfig":"12"},{"size":446,"mtime":1612486700663,"results":"14","hashOfConfig":"12"},{"size":487,"mtime":1612486700663,"results":"15","hashOfConfig":"12"},{"size":1397,"mtime":1612486700664,"results":"16","hashOfConfig":"12"},{"size":1271,"mtime":1612486700665,"results":"17","hashOfConfig":"12"},{"size":451,"mtime":1612509541008,"results":"18","hashOfConfig":"12"},{"size":703,"mtime":1612510034108,"results":"19","hashOfConfig":"12"},{"size":1142,"mtime":1612520113798,"results":"20","hashOfConfig":"12"},{"size":1368,"mtime":1612538715149,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"34g9sq",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/songjaehyeok/Desktop/github/React_Youtube/youtube/src/index.js",[],["46","47"],"/Users/songjaehyeok/Desktop/github/React_Youtube/youtube/src/app.jsx",["48"],"import React, { useEffect, useState } from 'react';\nimport styles from './app.module.css';\nimport MainSearchForm from './components/search_form/main_search/mainSearchForm'\nimport SubSearchForm from './components/search_form/sub_search/subSearchForm'\nimport MostVideoList from './components/most_videos/most_video_list/most_video_list'\nimport PlayVideo from './components/play_video/play_video'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\nimport SearchVideoList from './components/search_videos/search_video_list/search_video_list';\n\nfunction App({youtube}) {\n\n  const [mostVideos, setMostVideos] = useState([]);\n  const [word, setWord] = useState(\"\");\n  const [searchVideos, setSearchVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [videoDetails, setVideoDetails] = useState([])\n\n  const searchWord = word =>{\n    setWord(word);\n  }\n\n  const selectVideo = video =>{\n    setSelectedVideo(video);\n    youtube\n    .videoDetails(video.id) // 배열 벗기기\n    // .then(details => key(details))\n    .then(details => setVideoDetails(details[0]))\n  }\n\n  useEffect(() =>{\n    youtube\n      .mostPopular() //\n      .then(videos => setMostVideos(videos));\n  }, [youtube])\n\n  useEffect(()=>{\n    setSelectedVideo(null);\n    if(word === \"\")return;\n    youtube\n      .search(word) //\n      .then(videos => setSearchVideos(videos));\n  },[word])\n\n\n\n  \n  return (\n    <Router>\n      <div className={styles.App}>\n        <Switch>\n          {/* Search */}\n          <Route path=\"/searchPage\">\n            <div className={styles.searchPage}>\n              <SubSearchForm searchWord={word} newSearchWord={searchWord} />\n\n              <div className={styles.content}>\n                {selectedVideo &&<div className={styles.playVideo}>\n                   <PlayVideo selectedVideo={selectedVideo} videoDetails={videoDetails}/>\n                </div>}\n                \n                <div className={styles.list}>\n                  <SearchVideoList videos={searchVideos} onVideoClick={selectVideo} display={selectedVideo? 'onPlay' : 'offPlay'}/>\n                </div>\n              </div>\n\n            </div>\n          </Route>\n\n          {/* Main */}\n          <Route path=\"/\">\n            <div className={styles.mainPage}>\n              <MainSearchForm searchWord={searchWord}/>\n              <MostVideoList videos={mostVideos}/>\n            </div>\n          </Route>\n\n        </Switch>\n      </div>\n    </Router>\n  );\n  \n}\n\nexport default App;\n","/Users/songjaehyeok/Desktop/github/React_Youtube/youtube/src/components/most_videos/most_video_list/most_video_list.jsx",[],"/Users/songjaehyeok/Desktop/github/React_Youtube/youtube/src/components/most_videos/most_video_item/most_video_item.jsx",[],"/Users/songjaehyeok/Desktop/github/React_Youtube/youtube/src/components/search_form/main_search/mainSearchForm.jsx",["49","50","51","52"],"import React, {useRef, useState} from 'react';\nimport styles from './mainSearchForm.module.css'\nimport youtubeLogo from '../../../youtube_logo.png';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    NavLink\n  } from 'react-router-dom'\n\nconst MainSearchForm = (props) => {\n            \n    const [searchValue, setSearchValue] = useState(\"\");\n\n\n    const onSubmit = e =>{\n        e.preventDefault();\n        props.searchWord(searchValue);\n        document.querySelector('#searchLink').click();\n    }\n\n\n    return(\n        <section className={styles.wrap}>\n            <div className={styles.logo}><img src={youtubeLogo} alt=\"유튜브 로고\" className={styles.logoImg}/></div>\n            <form action=\"#\" onSubmit={onSubmit} className={styles.searchForm}>\n                <input\n                type=\"text\"\n                placeholder=\"검색어를 입력해주세요\"\n                className={styles.searchText}\n                value = {searchValue}\n                onChange = {e =>setSearchValue(e.target.value)}\n                />\n                <button type=\"submit\" className={styles.searchButton}><i className=\"fas fa-search\"></i></button>\n                <NavLink id=\"searchLink\" className={styles.searchLink} to=\"/searchPage\">Link</NavLink>\n            </form>\n        </section>\n    );\n};\n\nexport default MainSearchForm;","/Users/songjaehyeok/Desktop/github/React_Youtube/youtube/src/components/search_form/sub_search/subSearchForm.jsx",["53","54","55","56"],"import React, {useEffect, useState} from 'react';\nimport youtubeLogo from '../../../youtube_logo.png';\nimport styles from './subSearchForm.module.css'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    NavLink\n  } from 'react-router-dom'\n\nconst SubSearchForm = (props) => {\n    \n    const [searchValue, setSearchValue] = useState(\"\");\n\n    const onSubmit = e =>{\n        e.preventDefault();\n        props.newSearchWord(searchValue);\n    }\n\n    useEffect(()=>{\n        setSearchValue(props.searchWord);\n\n    },[])\n\n    return(\n        <header className={styles.header}>\n            <NavLink to='/' className={styles.logo}><img src={youtubeLogo} alt=\"유튜브 로고\" className={styles.logoImg}/></NavLink>\n            <form action=\"#\" onSubmit={onSubmit} className={styles.searchForm}>\n                <input\n                type=\"text\"\n                placeholder=\"검색어를 입력해주세요\"\n                className={styles.searchText}\n                value = {searchValue}\n                onChange = {e =>setSearchValue(e.target.value)}\n                />\n                <button type=\"submit\" className={styles.searchButton}><i className=\"fas fa-search\"></i></button>\n            </form>\n        </header>\n    );\n};\n\nexport default SubSearchForm;","/Users/songjaehyeok/Desktop/github/React_Youtube/youtube/src/components/search_videos/search_video_list/search_video_list.jsx",[],"/Users/songjaehyeok/Desktop/github/React_Youtube/youtube/src/components/search_videos/search_video_item/search_video_item.jsx",[],"/Users/songjaehyeok/Desktop/github/React_Youtube/youtube/src/service/youtube.js",[],"/Users/songjaehyeok/Desktop/github/React_Youtube/youtube/src/components/play_video/play_video.jsx",["57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":46,"column":5,"nodeType":"64","endLine":46,"endColumn":11,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":16,"nodeType":"68","messageId":"69","endLine":1,"endColumn":22},{"ruleId":"66","severity":1,"message":"70","line":6,"column":22,"nodeType":"68","messageId":"69","endLine":6,"endColumn":28},{"ruleId":"66","severity":1,"message":"71","line":7,"column":5,"nodeType":"68","messageId":"69","endLine":7,"endColumn":11},{"ruleId":"66","severity":1,"message":"72","line":8,"column":5,"nodeType":"68","messageId":"69","endLine":8,"endColumn":10},{"ruleId":"66","severity":1,"message":"70","line":5,"column":22,"nodeType":"68","messageId":"69","endLine":5,"endColumn":28},{"ruleId":"66","severity":1,"message":"71","line":6,"column":5,"nodeType":"68","messageId":"69","endLine":6,"endColumn":11},{"ruleId":"66","severity":1,"message":"72","line":7,"column":5,"nodeType":"68","messageId":"69","endLine":7,"endColumn":10},{"ruleId":"62","severity":1,"message":"73","line":23,"column":7,"nodeType":"64","endLine":23,"endColumn":9,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":11,"column":13,"nodeType":"77","endLine":19,"endColumn":14},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'youtube'. Either include it or remove the dependency array.","ArrayExpression",["80"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","React Hook useEffect has a missing dependency: 'props.searchWord'. Either include it or remove the dependency array. If 'setSearchValue' needs the current value of 'props.searchWord', you can also switch to useReducer instead of useState and read 'props.searchWord' in the reducer.",["81"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"Update the dependencies array to be: [word, youtube]",{"range":"86","text":"87"},"Update the dependencies array to be: [props.searchWord]",{"range":"88","text":"89"},[1396,1402],"[word, youtube]",[523,525],"[props.searchWord]"]